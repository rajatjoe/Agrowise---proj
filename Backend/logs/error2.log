AxiosError: Request failed with status code 500
    at settle (D:\HackOut24\Website\Agrowise---proj\Backend\node_modules\axios\dist\node\axios.cjs:2015:12)
    at IncomingMessage.handleStreamEnd (D:\HackOut24\Website\Agrowise---proj\Backend\node_modules\axios\dist\node\axios.cjs:3131:11)
    at IncomingMessage.emit (node:events:530:35)
    at endReadableNT (node:internal/streams/readable:1696:12)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21)
    at Axios.request (D:\HackOut24\Website\Agrowise---proj\Backend\node_modules\axios\dist\node\axios.cjs:4262:41)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async D:\HackOut24\Website\Agrowise---proj\Backend\index.js:106:26 {
  code: 'ERR_BAD_RESPONSE',
  config: {
    transitional: {
      silentJSONParsing: true,
      forcedJSONParsing: true,
      clarifyTimeoutError: false
    },
    adapter: [ 'xhr', 'http', 'fetch' ],
    transformRequest: [ [Function: transformRequest] ],
    transformResponse: [ [Function: transformResponse] ],
    timeout: 0,
    xsrfCookieName: 'XSRF-TOKEN',
    xsrfHeaderName: 'X-XSRF-TOKEN',
    maxContentLength: -1,
    maxBodyLength: -1,
    env: {
      FormData: [Function: FormData] {
        LINE_BREAK: '\r\n',
        DEFAULT_CONTENT_TYPE: 'application/octet-stream'
      },
      Blob: [class Blob]
    },
    validateStatus: [Function: validateStatus],
    headers: Object [AxiosHeaders] {
      Accept: 'application/json, text/plain, */*',
      'Content-Type': 'application/json',
      'User-Agent': 'axios/1.7.3',
      'Content-Length': '13463',
      'Accept-Encoding': 'gzip, compress, deflate, br'
    },
    method: 'post',
    url: 'http://127.0.0.1:5001/get_conditions',
    data: '{"userData":{"location":{"latitude":23.12031456716522,"longitude":72.5687126364857},"farmName":"ada","cropType":"dad","growthStage":"seed","plantingDate":"2024-08-16"},"farmData":{"soilData":{"type":"Feature","geometry":{"type":"Point","coordinates":[72.5687126364857,23.12031456716522]},"properties":{"layers":[{"name":"bdod","unit_measure":{"d_factor":100,"mapped_units":"cg/cm³","target_units":"kg/dm³","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":85,"Q0.5":156,"Q0.95":190,"mean":148}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":101,"Q0.5":155,"Q0.95":190,"mean":151}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":108,"Q0.5":156,"Q0.95":190,"mean":154}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":100,"Q0.5":159,"Q0.95":190,"mean":155}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":102,"Q0.5":159,"Q0.95":192,"mean":156}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":89,"Q0.5":159,"Q0.95":192,"mean":157}}]},{"name":"cec","unit_measure":{"d_factor":10,"mapped_units":"mmol(c)/kg","target_units":"cmol(c)/kg","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":32,"Q0.5":321,"Q0.95":604,"mean":324}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":29,"Q0.5":339,"Q0.95":588,"mean":329}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":32,"Q0.5":339,"Q0.95":601,"mean":331}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":32,"Q0.5":317,"Q0.95":605,"mean":329}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":40,"Q0.5":315,"Q0.95":601,"mean":322}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":40,"Q0.5":314,"Q0.95":588,"mean":319}}]},{"name":"cfvo","unit_measure":{"d_factor":10,"mapped_units":"cm³/dm³","target_units":"cm³/100cm³","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":0,"Q0.5":11,"Q0.95":552,"mean":104}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":0,"Q0.5":20,"Q0.95":414,"mean":97}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":0,"Q0.5":20,"Q0.95":414,"mean":99}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":0,"Q0.5":20,"Q0.95":540,"mean":104}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":0,"Q0.5":10,"Q0.95":552,"mean":112}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":0,"Q0.5":10,"Q0.95":502,"mean":108}}]},{"name":"clay","unit_measure":{"d_factor":10,"mapped_units":"g/kg","target_units":"%","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":9,"Q0.5":255,"Q0.95":893,"mean":338}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":9,"Q0.5":278,"Q0.95":887,"mean":341}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":12,"Q0.5":257,"Q0.95":888,"mean":330}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":9,"Q0.5":244,"Q0.95":934,"mean":334}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":8,"Q0.5":236,"Q0.95":934,"mean":337}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":8,"Q0.5":228,"Q0.95":939,"mean":330}}]},{"name":"nitrogen","unit_measure":{"d_factor":100,"mapped_units":"cg/kg","target_units":"g/kg","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":20,"Q0.5":70,"Q0.95":786,"mean":168}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":18,"Q0.5":59,"Q0.95":376,"mean":118}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":14,"Q0.5":50,"Q0.95":290,"mean":92}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":10,"Q0.5":44,"Q0.95":250,"mean":66}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":10,"Q0.5":36,"Q0.95":151,"mean":63}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":10,"Q0.5":33,"Q0.95":160,"mean":54}}]},{"name":"ocd","unit_measure":{"d_factor":10,"mapped_units":"dg/dm³","target_units":"hg/m³","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":56,"Q0.5":162,"Q0.95":414,"mean":194}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":56,"Q0.5":142,"Q0.95":389,"mean":177}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":45,"Q0.5":108,"Q0.95":342,"mean":140}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":30,"Q0.5":74,"Q0.95":189,"mean":93}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":18,"Q0.5":60,"Q0.95":136,"mean":73}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":12,"Q0.5":45,"Q0.95":126,"mean":61}}]},{"name":"ocs","unit_measure":{"d_factor":10,"mapped_units":"t/ha","target_units":"kg/m²","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":30,"unit_depth":"cm"},"label":"0-30cm","values":{"Q0.05":5,"Q0.5":22,"Q0.95":71,"mean":27}}]},{"name":"phh2o","unit_measure":{"d_factor":10,"mapped_units":"pH*10","target_units":"-","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":55,"Q0.5":75,"Q0.95":88,"mean":74}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":55,"Q0.5":76,"Q0.95":88,"mean":74}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":55,"Q0.5":77,"Q0.95":91,"mean":75}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":51,"Q0.5":78,"Q0.95":93,"mean":76}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":51,"Q0.5":80,"Q0.95":93,"mean":77}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":51,"Q0.5":81,"Q0.95":94,"mean":78}}]},{"name":"sand","unit_measure":{"d_factor":10,"mapped_units":"g/kg","target_units":"%","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":25,"Q0.5":244,"Q0.95":808,"mean":313}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":25,"Q0.5":253,"Q0.95":786,"mean":314}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":31,"Q0.5":262,"Q0.95":808,"mean":319}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":25,"Q0.5":238,"Q0.95":823,"mean":319}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":32,"Q0.5":229,"Q0.95":823,"mean":318}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":23,"Q0.5":225,"Q0.95":830,"mean":311}}]},{"name":"silt","unit_measure":{"d_factor":10,"mapped_units":"g/kg","target_units":"%","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":8,"Q0.5":304,"Q0.95":932,"mean":348}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":8,"Q0.5":297,"Q0.95":922,"mean":345}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":8,"Q0.5":306,"Q0.95":895,"mean":350}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":7,"Q0.5":284,"Q0.95":915,"mean":347}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":7,"Q0.5":269,"Q0.95":892,"mean":345}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":6,"Q0.5":311,"Q0.95":879,"mean":359}}]},{"name":"soc","unit_measure":{"d_factor":10,"mapped_units":"dg/kg","target_units":"g/kg","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":20,"Q0.5":65,"Q0.95":305,"mean":120}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":18,"Q0.5":58,"Q0.95":290,"mean":94}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":10,"Q0.5":40,"Q0.95":151,"mean":59}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":6,"Q0.5":28,"Q0.95":96,"mean":39}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":5,"Q0.5":24,"Q0.95":96,"mean":41}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":3,"Q0.5":20,"Q0.95":93,"mean":32}}]},{"name":"wv0010","unit'... 3442 more characters
  },
  request: <ref *1> ClientRequest {
    _events: [Object: null prototype] {
      abort: [Function (anonymous)],
      aborted: [Function (anonymous)],
      connect: [Function (anonymous)],
      error: [Function (anonymous)],
      socket: [Function (anonymous)],
      timeout: [Function (anonymous)],
      finish: [Function: requestOnFinish]
    },
    _eventsCount: 7,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    destroyed: false,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    maxRequestsOnConnectionReached: false,
    _defaultKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    strictContentLength: false,
    _contentLength: '13463',
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    _closed: false,
    socket: <ref *2> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: {
        close: [ [Function: onClose], [Function: socketCloseListener] ],
        error: [Function: socketErrorListener],
        prefinish: undefined,
        finish: [Function: bound onceWrapper] { listener: [Function: destroy] },
        drain: undefined,
        data: undefined,
        end: [Function: onReadableStreamEnd],
        readable: undefined,
        connect: undefined,
        free: [Function: onFree],
        timeout: [Function: onTimeout],
        agentRemove: [Function: onRemove]
      },
      _readableState: ReadableState {
        highWaterMark: 16384,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        [Symbol(kState)]: 60303620
      },
      _writableState: WritableState {
        highWaterMark: 16384,
        length: 0,
        corked: 0,
        onwrite: [Function: bound onwrite],
        writelen: 0,
        bufferedIndex: 0,
        pendingcb: 1,
        [Symbol(kState)]: 1091310852,
        [Symbol(kBufferedValue)]: null,
        [Symbol(kWriteCbValue)]: [Function (anonymous)]
      },
      allowHalfOpen: false,
      _maxListeners: undefined,
      _eventsCount: 7,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: null,
      _server: null,
      timeout: 5000,
      parser: null,
      _httpMessage: [Circular *1],
      [Symbol(async_id_symbol)]: 200,
      [Symbol(kHandle)]: TCP {
        reading: true,
        onconnection: null,
        [Symbol(owner_symbol)]: [Circular *2]
      },
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: Timeout {
        _idleTimeout: 5000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 21771,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: null,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 199,
        [Symbol(triggerId)]: 195
      },
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: true,
      [Symbol(kSetKeepAliveInitialDelay)]: 60,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _header: 'POST /get_conditions HTTP/1.1\r\n' +
      'Accept: application/json, text/plain, */*\r\n' +
      'Content-Type: application/json\r\n' +
      'User-Agent: axios/1.7.3\r\n' +
      'Content-Length: 13463\r\n' +
      'Accept-Encoding: gzip, compress, deflate, br\r\n' +
      'Host: 127.0.0.1:5001\r\n' +
      'Connection: keep-alive\r\n' +
      '\r\n',
    _keepAliveTimeout: 0,
    _onPendingData: [Function: nop],
    agent: Agent {
      _events: [Object: null prototype] {
        free: [Function (anonymous)],
        newListener: [Function: maybeEnableKeylog]
      },
      _eventsCount: 2,
      _maxListeners: undefined,
      defaultPort: 80,
      protocol: 'http:',
      options: [Object: null prototype] {
        keepAlive: true,
        scheduling: 'lifo',
        timeout: 5000,
        noDelay: true,
        path: null
      },
      requests: [Object: null prototype] {},
      sockets: [Object: null prototype] {
        '127.0.0.1:5001:': [
          <ref *2> Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: null,
            _closeAfterHandlingError: false,
            _events: {
              close: [ [Function: onClose], [Function: socketCloseListener] ],
              error: [Function: socketErrorListener],
              prefinish: undefined,
              finish: [Function: bound onceWrapper] {
                listener: [Function: destroy]
              },
              drain: undefined,
              data: undefined,
              end: [Function: onReadableStreamEnd],
              readable: undefined,
              connect: undefined,
              free: [Function: onFree],
              timeout: [Function: onTimeout],
              agentRemove: [Function: onRemove]
            },
            _readableState: ReadableState {
              highWaterMark: 16384,
              buffer: [],
              bufferIndex: 0,
              length: 0,
              pipes: [],
              awaitDrainWriters: null,
              [Symbol(kState)]: 60303620
            },
            _writableState: WritableState {
              highWaterMark: 16384,
              length: 0,
              corked: 0,
              onwrite: [Function: bound onwrite],
              writelen: 0,
              bufferedIndex: 0,
              pendingcb: 1,
              [Symbol(kState)]: 1091310852,
              [Symbol(kBufferedValue)]: null,
              [Symbol(kWriteCbValue)]: [Function (anonymous)]
            },
            allowHalfOpen: false,
            _maxListeners: undefined,
            _eventsCount: 7,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: null,
            _server: null,
            timeout: 5000,
            parser: null,
            _httpMessage: [Circular *1],
            [Symbol(async_id_symbol)]: 200,
            [Symbol(kHandle)]: TCP {
              reading: true,
              onconnection: null,
              [Symbol(owner_symbol)]: [Circular *2]
            },
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
              _idleTimeout: 5000,
              _idlePrev: [TimersList],
              _idleNext: [TimersList],
              _idleStart: 21771,
              _onTimeout: [Function: bound ],
              _timerArgs: undefined,
              _repeat: null,
              _destroyed: false,
              [Symbol(refed)]: false,
              [Symbol(kHasPrimitive)]: false,
              [Symbol(asyncId)]: 199,
              [Symbol(triggerId)]: 195
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(shapeMode)]: true,
            [Symbol(kCapture)]: false,
            [Symbol(kSetNoDelay)]: true,
            [Symbol(kSetKeepAlive)]: true,
            [Symbol(kSetKeepAliveInitialDelay)]: 60,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
          }
        ]
      },
      freeSockets: [Object: null prototype] {},
      keepAliveMsecs: 1000,
      keepAlive: true,
      maxSockets: Infinity,
      maxFreeSockets: 256,
      scheduling: 'lifo',
      maxTotalSockets: Infinity,
      totalSocketCount: 1,
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false
    },
    socketPath: undefined,
    method: 'POST',
    maxHeaderSize: undefined,
    insecureHTTPParser: undefined,
    joinDuplicateHeaders: undefined,
    path: '/get_conditions',
    _ended: true,
    res: IncomingMessage {
      _events: {
        close: undefined,
        error: [Function: handleStreamError],
        data: [Function: handleStreamData],
        end: [ [Function: responseOnEnd], [Function: handleStreamEnd] ],
        readable: undefined,
        finish: undefined,
        aborted: [Function: handlerStreamAborted]
      },
      _readableState: ReadableState {
        highWaterMark: 16384,
        buffer: [],
        bufferIndex: 0,
        length: 0,
        pipes: [],
        awaitDrainWriters: null,
        [Symbol(kState)]: 194512764
      },
      _maxListeners: undefined,
      socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _events: {
          close: [ [Function: onClose], [Function: socketCloseListener] ],
          error: [Function: socketErrorListener],
          prefinish: undefined,
          finish: [Function: bound onceWrapper] {
            listener: [Function: destroy]
          },
          drain: undefined,
          data: undefined,
          end: [Function: onReadableStreamEnd],
          readable: undefined,
          connect: undefined,
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove]
        },
        _readableState: ReadableState {
          highWaterMark: 16384,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          [Symbol(kState)]: 60303620
        },
        _writableState: WritableState {
          highWaterMark: 16384,
          length: 0,
          corked: 0,
          onwrite: [Function: bound onwrite],
          writelen: 0,
          bufferedIndex: 0,
          pendingcb: 1,
          [Symbol(kState)]: 1091310852,
          [Symbol(kBufferedValue)]: null,
          [Symbol(kWriteCbValue)]: [Function (anonymous)]
        },
        allowHalfOpen: false,
        _maxListeners: undefined,
        _eventsCount: 7,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 5000,
        parser: null,
        _httpMessage: [Circular *1],
        [Symbol(async_id_symbol)]: 200,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: 5000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 21771,
          _onTimeout: [Function: bound ],
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: false,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 199,
          [Symbol(triggerId)]: 195
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 60,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      httpVersionMajor: 1,
      httpVersionMinor: 1,
      httpVersion: '1.1',
      complete: true,
      rawHeaders: [
        'Server',
        'Werkzeug/3.0.1 Python/3.11.6',
        'Date',
        'Mon, 12 Aug 2024 13:34:21 GMT',
        'Content-Type',
        'text/html; charset=utf-8',
        'Content-Length',
        '265',
        'Access-Control-Allow-Origin',
        '*',
        'Connection',
        'close'
      ],
      rawTrailers: [],
      joinDuplicateHeaders: undefined,
      aborted: false,
      upgrade: false,
      url: '',
      method: null,
      statusCode: 500,
      statusMessage: 'INTERNAL SERVER ERROR',
      client: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _events: {
          close: [ [Function: onClose], [Function: socketCloseListener] ],
          error: [Function: socketErrorListener],
          prefinish: undefined,
          finish: [Function: bound onceWrapper] {
            listener: [Function: destroy]
          },
          drain: undefined,
          data: undefined,
          end: [Function: onReadableStreamEnd],
          readable: undefined,
          connect: undefined,
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove]
        },
        _readableState: ReadableState {
          highWaterMark: 16384,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          [Symbol(kState)]: 60303620
        },
        _writableState: WritableState {
          highWaterMark: 16384,
          length: 0,
          corked: 0,
          onwrite: [Function: bound onwrite],
          writelen: 0,
          bufferedIndex: 0,
          pendingcb: 1,
          [Symbol(kState)]: 1091310852,
          [Symbol(kBufferedValue)]: null,
          [Symbol(kWriteCbValue)]: [Function (anonymous)]
        },
        allowHalfOpen: false,
        _maxListeners: undefined,
        _eventsCount: 7,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 5000,
        parser: null,
        _httpMessage: [Circular *1],
        [Symbol(async_id_symbol)]: 200,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: 5000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 21771,
          _onTimeout: [Function: bound ],
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: false,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 199,
          [Symbol(triggerId)]: 195
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 60,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _consuming: true,
      _dumped: false,
      req: [Circular *1],
      _eventsCount: 4,
      responseUrl: 'http://127.0.0.1:5001/get_conditions',
      redirects: [],
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kHeaders)]: {
        server: 'Werkzeug/3.0.1 Python/3.11.6',
        date: 'Mon, 12 Aug 2024 13:34:21 GMT',
        'content-type': 'text/html; charset=utf-8',
        'content-length': '265',
        'access-control-allow-origin': '*',
        connection: 'close'
      },
      [Symbol(kHeadersCount)]: 12,
      [Symbol(kTrailers)]: null,
      [Symbol(kTrailersCount)]: 0
    },
    aborted: false,
    timeoutCb: [Function: emitRequestTimeout],
    upgradeOrConnect: false,
    parser: null,
    maxHeadersCount: null,
    reusedSocket: false,
    host: '127.0.0.1',
    protocol: 'http:',
    _redirectable: Writable {
      _events: {
        close: undefined,
        error: [Function: handleRequestError],
        prefinish: undefined,
        finish: undefined,
        drain: undefined,
        response: [Function: handleResponse],
        socket: [Function: handleRequestSocket]
      },
      _writableState: WritableState {
        highWaterMark: 16384,
        length: 0,
        corked: 0,
        onwrite: [Function: bound onwrite],
        writelen: 0,
        bufferedIndex: 0,
        pendingcb: 0,
        [Symbol(kState)]: 17580812,
        [Symbol(kBufferedValue)]: null
      },
      _maxListeners: undefined,
      _options: {
        maxRedirects: 21,
        maxBodyLength: Infinity,
        protocol: 'http:',
        path: '/get_conditions',
        method: 'POST',
        headers: [Object: null prototype] {
          Accept: 'application/json, text/plain, */*',
          'Content-Type': 'application/json',
          'User-Agent': 'axios/1.7.3',
          'Content-Length': '13463',
          'Accept-Encoding': 'gzip, compress, deflate, br'
        },
        agents: { http: undefined, https: undefined },
        auth: undefined,
        family: undefined,
        beforeRedirect: [Function: dispatchBeforeRedirect],
        beforeRedirects: { proxy: [Function: beforeRedirect] },
        hostname: '127.0.0.1',
        port: '5001',
        agent: undefined,
        nativeProtocols: {
          'http:': {
            _connectionListener: [Function: connectionListener],
            METHODS: [
              'ACL',         'BIND',       'CHECKOUT',
              'CONNECT',     'COPY',       'DELETE',
              'GET',         'HEAD',       'LINK',
              'LOCK',        'M-SEARCH',   'MERGE',
              'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
              'MOVE',        'NOTIFY',     'OPTIONS',
              'PATCH',       'POST',       'PROPFIND',
              'PROPPATCH',   'PURGE',      'PUT',
              'REBIND',      'REPORT',     'SEARCH',
              'SOURCE',      'SUBSCRIBE',  'TRACE',
              'UNBIND',      'UNLINK',     'UNLOCK',
              'UNSUBSCRIBE'
            ],
            STATUS_CODES: {
              '100': 'Continue',
              '101': 'Switching Protocols',
              '102': 'Processing',
              '103': 'Early Hints',
              '200': 'OK',
              '201': 'Created',
              '202': 'Accepted',
              '203': 'Non-Authoritative Information',
              '204': 'No Content',
              '205': 'Reset Content',
              '206': 'Partial Content',
              '207': 'Multi-Status',
              '208': 'Already Reported',
              '226': 'IM Used',
              '300': 'Multiple Choices',
              '301': 'Moved Permanently',
              '302': 'Found',
              '303': 'See Other',
              '304': 'Not Modified',
              '305': 'Use Proxy',
              '307': 'Temporary Redirect',
              '308': 'Permanent Redirect',
              '400': 'Bad Request',
              '401': 'Unauthorized',
              '402': 'Payment Required',
              '403': 'Forbidden',
              '404': 'Not Found',
              '405': 'Method Not Allowed',
              '406': 'Not Acceptable',
              '407': 'Proxy Authentication Required',
              '408': 'Request Timeout',
              '409': 'Conflict',
              '410': 'Gone',
              '411': 'Length Required',
              '412': 'Precondition Failed',
              '413': 'Payload Too Large',
              '414': 'URI Too Long',
              '415': 'Unsupported Media Type',
              '416': 'Range Not Satisfiable',
              '417': 'Expectation Failed',
              '418': "I'm a Teapot",
              '421': 'Misdirected Request',
              '422': 'Unprocessable Entity',
              '423': 'Locked',
              '424': 'Failed Dependency',
              '425': 'Too Early',
              '426': 'Upgrade Required',
              '428': 'Precondition Required',
              '429': 'Too Many Requests',
              '431': 'Request Header Fields Too Large',
              '451': 'Unavailable For Legal Reasons',
              '500': 'Internal Server Error',
              '501': 'Not Implemented',
              '502': 'Bad Gateway',
              '503': 'Service Unavailable',
              '504': 'Gateway Timeout',
              '505': 'HTTP Version Not Supported',
              '506': 'Variant Also Negotiates',
              '507': 'Insufficient Storage',
              '508': 'Loop Detected',
              '509': 'Bandwidth Limit Exceeded',
              '510': 'Not Extended',
              '511': 'Network Authentication Required'
            },
            Agent: [Function: Agent] { defaultMaxSockets: Infinity },
            ClientRequest: [Function: ClientRequest],
            IncomingMessage: [Function: IncomingMessage],
            OutgoingMessage: [Function: OutgoingMessage],
            Server: [Function: Server],
            ServerResponse: [Function: ServerResponse],
            createServer: [Function: createServer],
            validateHeaderName: [Function: wrappedFn] {
              withoutStackTrace: [Function (anonymous)]
            },
            validateHeaderValue: [Function: wrappedFn] {
              withoutStackTrace: [Function (anonymous)]
            },
            get: [Function: get],
            request: [Function: request],
            setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
            maxHeaderSize: [Getter],
            globalAgent: [Getter/Setter]
          },
          'https:': {
            Agent: [Function: Agent],
            globalAgent: Agent {
              _events: [Object: null prototype] {
                free: [Function (anonymous)],
                newListener: [Function: maybeEnableKeylog]
              },
              _eventsCount: 2,
              _maxListeners: undefined,
              defaultPort: 443,
              protocol: 'https:',
              options: [Object: null prototype] {
                keepAlive: true,
                scheduling: 'lifo',
                timeout: 5000,
                noDelay: true,
                path: null
              },
              requests: [Object: null prototype] {},
              sockets: [Object: null prototype] {},
              freeSockets: [Object: null prototype] {},
              keepAliveMsecs: 1000,
              keepAlive: true,
              maxSockets: Infinity,
              maxFreeSockets: 256,
              scheduling: 'lifo',
              maxTotalSockets: Infinity,
              totalSocketCount: 0,
              maxCachedSessions: 100,
              _sessionCache: { map: {}, list: [] },
              [Symbol(shapeMode)]: false,
              [Symbol(kCapture)]: false
            },
            Server: [Function: Server],
            createServer: [Function: createServer],
            get: [Function: get],
            request: [Function: request]
          }
        },
        pathname: '/get_conditions'
      },
      _ended: true,
      _ending: true,
      _redirectCount: 0,
      _redirects: [],
      _requestBodyLength: 13463,
      _requestBodyBuffers: [],
      _eventsCount: 3,
      _onNativeResponse: [Function (anonymous)],
      _currentRequest: [Circular *1],
      _currentUrl: 'http://127.0.0.1:5001/get_conditions',
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false
    },
    [Symbol(shapeMode)]: false,
    [Symbol(kCapture)]: false,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(kNeedDrain)]: false,
    [Symbol(corked)]: 0,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
      accept: [ 'Accept', 'application/json, text/plain, */*' ],
      'content-type': [ 'Content-Type', 'application/json' ],
      'user-agent': [ 'User-Agent', 'axios/1.7.3' ],
      'content-length': [ 'Content-Length', '13463' ],
      'accept-encoding': [ 'Accept-Encoding', 'gzip, compress, deflate, br' ],
      host: [ 'Host', '127.0.0.1:5001' ]
    },
    [Symbol(errored)]: null,
    [Symbol(kHighWaterMark)]: 16384,
    [Symbol(kRejectNonStandardBodyWrites)]: false,
    [Symbol(kUniqueHeaders)]: null
  },
  response: {
    status: 500,
    statusText: 'INTERNAL SERVER ERROR',
    headers: Object [AxiosHeaders] {
      server: 'Werkzeug/3.0.1 Python/3.11.6',
      date: 'Mon, 12 Aug 2024 13:34:21 GMT',
      'content-type': 'text/html; charset=utf-8',
      'content-length': '265',
      'access-control-allow-origin': '*',
      connection: 'close'
    },
    config: {
      transitional: {
        silentJSONParsing: true,
        forcedJSONParsing: true,
        clarifyTimeoutError: false
      },
      adapter: [ 'xhr', 'http', 'fetch' ],
      transformRequest: [ [Function: transformRequest] ],
      transformResponse: [ [Function: transformResponse] ],
      timeout: 0,
      xsrfCookieName: 'XSRF-TOKEN',
      xsrfHeaderName: 'X-XSRF-TOKEN',
      maxContentLength: -1,
      maxBodyLength: -1,
      env: {
        FormData: [Function: FormData] {
          LINE_BREAK: '\r\n',
          DEFAULT_CONTENT_TYPE: 'application/octet-stream'
        },
        Blob: [class Blob]
      },
      validateStatus: [Function: validateStatus],
      headers: Object [AxiosHeaders] {
        Accept: 'application/json, text/plain, */*',
        'Content-Type': 'application/json',
        'User-Agent': 'axios/1.7.3',
        'Content-Length': '13463',
        'Accept-Encoding': 'gzip, compress, deflate, br'
      },
      method: 'post',
      url: 'http://127.0.0.1:5001/get_conditions',
      data: '{"userData":{"location":{"latitude":23.12031456716522,"longitude":72.5687126364857},"farmName":"ada","cropType":"dad","growthStage":"seed","plantingDate":"2024-08-16"},"farmData":{"soilData":{"type":"Feature","geometry":{"type":"Point","coordinates":[72.5687126364857,23.12031456716522]},"properties":{"layers":[{"name":"bdod","unit_measure":{"d_factor":100,"mapped_units":"cg/cm³","target_units":"kg/dm³","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":85,"Q0.5":156,"Q0.95":190,"mean":148}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":101,"Q0.5":155,"Q0.95":190,"mean":151}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":108,"Q0.5":156,"Q0.95":190,"mean":154}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":100,"Q0.5":159,"Q0.95":190,"mean":155}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":102,"Q0.5":159,"Q0.95":192,"mean":156}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":89,"Q0.5":159,"Q0.95":192,"mean":157}}]},{"name":"cec","unit_measure":{"d_factor":10,"mapped_units":"mmol(c)/kg","target_units":"cmol(c)/kg","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":32,"Q0.5":321,"Q0.95":604,"mean":324}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":29,"Q0.5":339,"Q0.95":588,"mean":329}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":32,"Q0.5":339,"Q0.95":601,"mean":331}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":32,"Q0.5":317,"Q0.95":605,"mean":329}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":40,"Q0.5":315,"Q0.95":601,"mean":322}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":40,"Q0.5":314,"Q0.95":588,"mean":319}}]},{"name":"cfvo","unit_measure":{"d_factor":10,"mapped_units":"cm³/dm³","target_units":"cm³/100cm³","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":0,"Q0.5":11,"Q0.95":552,"mean":104}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":0,"Q0.5":20,"Q0.95":414,"mean":97}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":0,"Q0.5":20,"Q0.95":414,"mean":99}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":0,"Q0.5":20,"Q0.95":540,"mean":104}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":0,"Q0.5":10,"Q0.95":552,"mean":112}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":0,"Q0.5":10,"Q0.95":502,"mean":108}}]},{"name":"clay","unit_measure":{"d_factor":10,"mapped_units":"g/kg","target_units":"%","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":9,"Q0.5":255,"Q0.95":893,"mean":338}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":9,"Q0.5":278,"Q0.95":887,"mean":341}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":12,"Q0.5":257,"Q0.95":888,"mean":330}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":9,"Q0.5":244,"Q0.95":934,"mean":334}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":8,"Q0.5":236,"Q0.95":934,"mean":337}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":8,"Q0.5":228,"Q0.95":939,"mean":330}}]},{"name":"nitrogen","unit_measure":{"d_factor":100,"mapped_units":"cg/kg","target_units":"g/kg","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":20,"Q0.5":70,"Q0.95":786,"mean":168}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":18,"Q0.5":59,"Q0.95":376,"mean":118}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":14,"Q0.5":50,"Q0.95":290,"mean":92}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":10,"Q0.5":44,"Q0.95":250,"mean":66}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":10,"Q0.5":36,"Q0.95":151,"mean":63}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":10,"Q0.5":33,"Q0.95":160,"mean":54}}]},{"name":"ocd","unit_measure":{"d_factor":10,"mapped_units":"dg/dm³","target_units":"hg/m³","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":56,"Q0.5":162,"Q0.95":414,"mean":194}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":56,"Q0.5":142,"Q0.95":389,"mean":177}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":45,"Q0.5":108,"Q0.95":342,"mean":140}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":30,"Q0.5":74,"Q0.95":189,"mean":93}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":18,"Q0.5":60,"Q0.95":136,"mean":73}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":12,"Q0.5":45,"Q0.95":126,"mean":61}}]},{"name":"ocs","unit_measure":{"d_factor":10,"mapped_units":"t/ha","target_units":"kg/m²","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":30,"unit_depth":"cm"},"label":"0-30cm","values":{"Q0.05":5,"Q0.5":22,"Q0.95":71,"mean":27}}]},{"name":"phh2o","unit_measure":{"d_factor":10,"mapped_units":"pH*10","target_units":"-","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":55,"Q0.5":75,"Q0.95":88,"mean":74}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":55,"Q0.5":76,"Q0.95":88,"mean":74}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":55,"Q0.5":77,"Q0.95":91,"mean":75}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":51,"Q0.5":78,"Q0.95":93,"mean":76}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":51,"Q0.5":80,"Q0.95":93,"mean":77}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":51,"Q0.5":81,"Q0.95":94,"mean":78}}]},{"name":"sand","unit_measure":{"d_factor":10,"mapped_units":"g/kg","target_units":"%","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":25,"Q0.5":244,"Q0.95":808,"mean":313}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":25,"Q0.5":253,"Q0.95":786,"mean":314}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":31,"Q0.5":262,"Q0.95":808,"mean":319}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":25,"Q0.5":238,"Q0.95":823,"mean":319}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":32,"Q0.5":229,"Q0.95":823,"mean":318}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":23,"Q0.5":225,"Q0.95":830,"mean":311}}]},{"name":"silt","unit_measure":{"d_factor":10,"mapped_units":"g/kg","target_units":"%","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":8,"Q0.5":304,"Q0.95":932,"mean":348}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":8,"Q0.5":297,"Q0.95":922,"mean":345}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":8,"Q0.5":306,"Q0.95":895,"mean":350}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":7,"Q0.5":284,"Q0.95":915,"mean":347}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":7,"Q0.5":269,"Q0.95":892,"mean":345}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":6,"Q0.5":311,"Q0.95":879,"mean":359}}]},{"name":"soc","unit_measure":{"d_factor":10,"mapped_units":"dg/kg","target_units":"g/kg","uncertainty_unit":""},"depths":[{"range":{"top_depth":0,"bottom_depth":5,"unit_depth":"cm"},"label":"0-5cm","values":{"Q0.05":20,"Q0.5":65,"Q0.95":305,"mean":120}},{"range":{"top_depth":5,"bottom_depth":15,"unit_depth":"cm"},"label":"5-15cm","values":{"Q0.05":18,"Q0.5":58,"Q0.95":290,"mean":94}},{"range":{"top_depth":15,"bottom_depth":30,"unit_depth":"cm"},"label":"15-30cm","values":{"Q0.05":10,"Q0.5":40,"Q0.95":151,"mean":59}},{"range":{"top_depth":30,"bottom_depth":60,"unit_depth":"cm"},"label":"30-60cm","values":{"Q0.05":6,"Q0.5":28,"Q0.95":96,"mean":39}},{"range":{"top_depth":60,"bottom_depth":100,"unit_depth":"cm"},"label":"60-100cm","values":{"Q0.05":5,"Q0.5":24,"Q0.95":96,"mean":41}},{"range":{"top_depth":100,"bottom_depth":200,"unit_depth":"cm"},"label":"100-200cm","values":{"Q0.05":3,"Q0.5":20,"Q0.95":93,"mean":32}}]},{"name":"wv0010","unit'... 3442 more characters
    },
    request: <ref *1> ClientRequest {
      _events: [Object: null prototype] {
        abort: [Function (anonymous)],
        aborted: [Function (anonymous)],
        connect: [Function (anonymous)],
        error: [Function (anonymous)],
        socket: [Function (anonymous)],
        timeout: [Function (anonymous)],
        finish: [Function: requestOnFinish]
      },
      _eventsCount: 7,
      _maxListeners: undefined,
      outputData: [],
      outputSize: 0,
      writable: true,
      destroyed: false,
      _last: false,
      chunkedEncoding: false,
      shouldKeepAlive: false,
      maxRequestsOnConnectionReached: false,
      _defaultKeepAlive: true,
      useChunkedEncodingByDefault: true,
      sendDate: false,
      _removedConnection: false,
      _removedContLen: false,
      _removedTE: false,
      strictContentLength: false,
      _contentLength: '13463',
      _hasBody: true,
      _trailer: '',
      finished: true,
      _headerSent: true,
      _closed: false,
      socket: <ref *2> Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _closeAfterHandlingError: false,
        _events: {
          close: [ [Function: onClose], [Function: socketCloseListener] ],
          error: [Function: socketErrorListener],
          prefinish: undefined,
          finish: [Function: bound onceWrapper] {
            listener: [Function: destroy]
          },
          drain: undefined,
          data: undefined,
          end: [Function: onReadableStreamEnd],
          readable: undefined,
          connect: undefined,
          free: [Function: onFree],
          timeout: [Function: onTimeout],
          agentRemove: [Function: onRemove]
        },
        _readableState: ReadableState {
          highWaterMark: 16384,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          [Symbol(kState)]: 60303620
        },
        _writableState: WritableState {
          highWaterMark: 16384,
          length: 0,
          corked: 0,
          onwrite: [Function: bound onwrite],
          writelen: 0,
          bufferedIndex: 0,
          pendingcb: 1,
          [Symbol(kState)]: 1091310852,
          [Symbol(kBufferedValue)]: null,
          [Symbol(kWriteCbValue)]: [Function (anonymous)]
        },
        allowHalfOpen: false,
        _maxListeners: undefined,
        _eventsCount: 7,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        timeout: 5000,
        parser: null,
        _httpMessage: [Circular *1],
        [Symbol(async_id_symbol)]: 200,
        [Symbol(kHandle)]: TCP {
          reading: true,
          onconnection: null,
          [Symbol(owner_symbol)]: [Circular *2]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
          _idleTimeout: 5000,
          _idlePrev: [TimersList],
          _idleNext: [TimersList],
          _idleStart: 21771,
          _onTimeout: [Function: bound ],
          _timerArgs: undefined,
          _repeat: null,
          _destroyed: false,
          [Symbol(refed)]: false,
          [Symbol(kHasPrimitive)]: false,
          [Symbol(asyncId)]: 199,
          [Symbol(triggerId)]: 195
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kSetNoDelay)]: true,
        [Symbol(kSetKeepAlive)]: true,
        [Symbol(kSetKeepAliveInitialDelay)]: 60,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
      },
      _header: 'POST /get_conditions HTTP/1.1\r\n' +
        'Accept: application/json, text/plain, */*\r\n' +
        'Content-Type: application/json\r\n' +
        'User-Agent: axios/1.7.3\r\n' +
        'Content-Length: 13463\r\n' +
        'Accept-Encoding: gzip, compress, deflate, br\r\n' +
        'Host: 127.0.0.1:5001\r\n' +
        'Connection: keep-alive\r\n' +
        '\r\n',
      _keepAliveTimeout: 0,
      _onPendingData: [Function: nop],
      agent: Agent {
        _events: [Object: null prototype] {
          free: [Function (anonymous)],
          newListener: [Function: maybeEnableKeylog]
        },
        _eventsCount: 2,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object: null prototype] {
          keepAlive: true,
          scheduling: 'lifo',
          timeout: 5000,
          noDelay: true,
          path: null
        },
        requests: [Object: null prototype] {},
        sockets: [Object: null prototype] {
          '127.0.0.1:5001:': [
            <ref *2> Socket {
              connecting: false,
              _hadError: false,
              _parent: null,
              _host: null,
              _closeAfterHandlingError: false,
              _events: {
                close: [
                  [Function: onClose],
                  [Function: socketCloseListener]
                ],
                error: [Function: socketErrorListener],
                prefinish: undefined,
                finish: [Function: bound onceWrapper] {
                  listener: [Function: destroy]
                },
                drain: undefined,
                data: undefined,
                end: [Function: onReadableStreamEnd],
                readable: undefined,
                connect: undefined,
                free: [Function: onFree],
                timeout: [Function: onTimeout],
                agentRemove: [Function: onRemove]
              },
              _readableState: ReadableState {
                highWaterMark: 16384,
                buffer: [],
                bufferIndex: 0,
                length: 0,
                pipes: [],
                awaitDrainWriters: null,
                [Symbol(kState)]: 60303620
              },
              _writableState: WritableState {
                highWaterMark: 16384,
                length: 0,
                corked: 0,
                onwrite: [Function: bound onwrite],
                writelen: 0,
                bufferedIndex: 0,
                pendingcb: 1,
                [Symbol(kState)]: 1091310852,
                [Symbol(kBufferedValue)]: null,
                [Symbol(kWriteCbValue)]: [Function (anonymous)]
              },
              allowHalfOpen: false,
              _maxListeners: undefined,
              _eventsCount: 7,
              _sockname: null,
              _pendingData: null,
              _pendingEncoding: '',
              server: null,
              _server: null,
              timeout: 5000,
              parser: null,
              _httpMessage: [Circular *1],
              [Symbol(async_id_symbol)]: 200,
              [Symbol(kHandle)]: TCP {
                reading: true,
                onconnection: null,
                [Symbol(owner_symbol)]: [Circular *2]
              },
              [Symbol(lastWriteQueueSize)]: 0,
              [Symbol(timeout)]: Timeout {
                _idleTimeout: 5000,
                _idlePrev: [TimersList],
                _idleNext: [TimersList],
                _idleStart: 21771,
                _onTimeout: [Function: bound ],
                _timerArgs: undefined,
                _repeat: null,
                _destroyed: false,
                [Symbol(refed)]: false,
                [Symbol(kHasPrimitive)]: false,
                [Symbol(asyncId)]: 199,
                [Symbol(triggerId)]: 195
              },
              [Symbol(kBuffer)]: null,
              [Symbol(kBufferCb)]: null,
              [Symbol(kBufferGen)]: null,
              [Symbol(shapeMode)]: true,
              [Symbol(kCapture)]: false,
              [Symbol(kSetNoDelay)]: true,
              [Symbol(kSetKeepAlive)]: true,
              [Symbol(kSetKeepAliveInitialDelay)]: 60,
              [Symbol(kBytesRead)]: 0,
              [Symbol(kBytesWritten)]: 0
            }
          ]
        },
        freeSockets: [Object: null prototype] {},
        keepAliveMsecs: 1000,
        keepAlive: true,
        maxSockets: Infinity,
        maxFreeSockets: 256,
        scheduling: 'lifo',
        maxTotalSockets: Infinity,
        totalSocketCount: 1,
        [Symbol(shapeMode)]: false,
        [Symbol(kCapture)]: false
      },
      socketPath: undefined,
      method: 'POST',
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      joinDuplicateHeaders: undefined,
      path: '/get_conditions',
      _ended: true,
      res: IncomingMessage {
        _events: {
          close: undefined,
          error: [Function: handleStreamError],
          data: [Function: handleStreamData],
          end: [ [Function: responseOnEnd], [Function: handleStreamEnd] ],
          readable: undefined,
          finish: undefined,
          aborted: [Function: handlerStreamAborted]
        },
        _readableState: ReadableState {
          highWaterMark: 16384,
          buffer: [],
          bufferIndex: 0,
          length: 0,
          pipes: [],
          awaitDrainWriters: null,
          [Symbol(kState)]: 194512764
        },
        _maxListeners: undefined,
        socket: <ref *2> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _events: {
            close: [ [Function: onClose], [Function: socketCloseListener] ],
            error: [Function: socketErrorListener],
            prefinish: undefined,
            finish: [Function: bound onceWrapper] {
              listener: [Function: destroy]
            },
            drain: undefined,
            data: undefined,
            end: [Function: onReadableStreamEnd],
            readable: undefined,
            connect: undefined,
            free: [Function: onFree],
            timeout: [Function: onTimeout],
            agentRemove: [Function: onRemove]
          },
          _readableState: ReadableState {
            highWaterMark: 16384,
            buffer: [],
            bufferIndex: 0,
            length: 0,
            pipes: [],
            awaitDrainWriters: null,
            [Symbol(kState)]: 60303620
          },
          _writableState: WritableState {
            highWaterMark: 16384,
            length: 0,
            corked: 0,
            onwrite: [Function: bound onwrite],
            writelen: 0,
            bufferedIndex: 0,
            pendingcb: 1,
            [Symbol(kState)]: 1091310852,
            [Symbol(kBufferedValue)]: null,
            [Symbol(kWriteCbValue)]: [Function (anonymous)]
          },
          allowHalfOpen: false,
          _maxListeners: undefined,
          _eventsCount: 7,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          timeout: 5000,
          parser: null,
          _httpMessage: [Circular *1],
          [Symbol(async_id_symbol)]: 200,
          [Symbol(kHandle)]: TCP {
            reading: true,
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *2]
          },
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: Timeout {
            _idleTimeout: 5000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 21771,
            _onTimeout: [Function: bound ],
            _timerArgs: undefined,
            _repeat: null,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 199,
            [Symbol(triggerId)]: 195
          },
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 60,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0
        },
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        rawHeaders: [
          'Server',
          'Werkzeug/3.0.1 Python/3.11.6',
          'Date',
          'Mon, 12 Aug 2024 13:34:21 GMT',
          'Content-Type',
          'text/html; charset=utf-8',
          'Content-Length',
          '265',
          'Access-Control-Allow-Origin',
          '*',
          'Connection',
          'close'
        ],
        rawTrailers: [],
        joinDuplicateHeaders: undefined,
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 500,
        statusMessage: 'INTERNAL SERVER ERROR',
        client: <ref *2> Socket {
          connecting: false,
          _hadError: false,
          _parent: null,
          _host: null,
          _closeAfterHandlingError: false,
          _events: {
            close: [ [Function: onClose], [Function: socketCloseListener] ],
            error: [Function: socketErrorListener],
            prefinish: undefined,
            finish: [Function: bound onceWrapper] {
              listener: [Function: destroy]
            },
            drain: undefined,
            data: undefined,
            end: [Function: onReadableStreamEnd],
            readable: undefined,
            connect: undefined,
            free: [Function: onFree],
            timeout: [Function: onTimeout],
            agentRemove: [Function: onRemove]
          },
          _readableState: ReadableState {
            highWaterMark: 16384,
            buffer: [],
            bufferIndex: 0,
            length: 0,
            pipes: [],
            awaitDrainWriters: null,
            [Symbol(kState)]: 60303620
          },
          _writableState: WritableState {
            highWaterMark: 16384,
            length: 0,
            corked: 0,
            onwrite: [Function: bound onwrite],
            writelen: 0,
            bufferedIndex: 0,
            pendingcb: 1,
            [Symbol(kState)]: 1091310852,
            [Symbol(kBufferedValue)]: null,
            [Symbol(kWriteCbValue)]: [Function (anonymous)]
          },
          allowHalfOpen: false,
          _maxListeners: undefined,
          _eventsCount: 7,
          _sockname: null,
          _pendingData: null,
          _pendingEncoding: '',
          server: null,
          _server: null,
          timeout: 5000,
          parser: null,
          _httpMessage: [Circular *1],
          [Symbol(async_id_symbol)]: 200,
          [Symbol(kHandle)]: TCP {
            reading: true,
            onconnection: null,
            [Symbol(owner_symbol)]: [Circular *2]
          },
          [Symbol(lastWriteQueueSize)]: 0,
          [Symbol(timeout)]: Timeout {
            _idleTimeout: 5000,
            _idlePrev: [TimersList],
            _idleNext: [TimersList],
            _idleStart: 21771,
            _onTimeout: [Function: bound ],
            _timerArgs: undefined,
            _repeat: null,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(kHasPrimitive)]: false,
            [Symbol(asyncId)]: 199,
            [Symbol(triggerId)]: 195
          },
          [Symbol(kBuffer)]: null,
          [Symbol(kBufferCb)]: null,
          [Symbol(kBufferGen)]: null,
          [Symbol(shapeMode)]: true,
          [Symbol(kCapture)]: false,
          [Symbol(kSetNoDelay)]: true,
          [Symbol(kSetKeepAlive)]: true,
          [Symbol(kSetKeepAliveInitialDelay)]: 60,
          [Symbol(kBytesRead)]: 0,
          [Symbol(kBytesWritten)]: 0
        },
        _consuming: true,
        _dumped: false,
        req: [Circular *1],
        _eventsCount: 4,
        responseUrl: 'http://127.0.0.1:5001/get_conditions',
        redirects: [],
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false,
        [Symbol(kHeaders)]: {
          server: 'Werkzeug/3.0.1 Python/3.11.6',
          date: 'Mon, 12 Aug 2024 13:34:21 GMT',
          'content-type': 'text/html; charset=utf-8',
          'content-length': '265',
          'access-control-allow-origin': '*',
          connection: 'close'
        },
        [Symbol(kHeadersCount)]: 12,
        [Symbol(kTrailers)]: null,
        [Symbol(kTrailersCount)]: 0
      },
      aborted: false,
      timeoutCb: [Function: emitRequestTimeout],
      upgradeOrConnect: false,
      parser: null,
      maxHeadersCount: null,
      reusedSocket: false,
      host: '127.0.0.1',
      protocol: 'http:',
      _redirectable: Writable {
        _events: {
          close: undefined,
          error: [Function: handleRequestError],
          prefinish: undefined,
          finish: undefined,
          drain: undefined,
          response: [Function: handleResponse],
          socket: [Function: handleRequestSocket]
        },
        _writableState: WritableState {
          highWaterMark: 16384,
          length: 0,
          corked: 0,
          onwrite: [Function: bound onwrite],
          writelen: 0,
          bufferedIndex: 0,
          pendingcb: 0,
          [Symbol(kState)]: 17580812,
          [Symbol(kBufferedValue)]: null
        },
        _maxListeners: undefined,
        _options: {
          maxRedirects: 21,
          maxBodyLength: Infinity,
          protocol: 'http:',
          path: '/get_conditions',
          method: 'POST',
          headers: [Object: null prototype] {
            Accept: 'application/json, text/plain, */*',
            'Content-Type': 'application/json',
            'User-Agent': 'axios/1.7.3',
            'Content-Length': '13463',
            'Accept-Encoding': 'gzip, compress, deflate, br'
          },
          agents: { http: undefined, https: undefined },
          auth: undefined,
          family: undefined,
          beforeRedirect: [Function: dispatchBeforeRedirect],
          beforeRedirects: { proxy: [Function: beforeRedirect] },
          hostname: '127.0.0.1',
          port: '5001',
          agent: undefined,
          nativeProtocols: {
            'http:': {
              _connectionListener: [Function: connectionListener],
              METHODS: [
                'ACL',         'BIND',       'CHECKOUT',
                'CONNECT',     'COPY',       'DELETE',
                'GET',         'HEAD',       'LINK',
                'LOCK',        'M-SEARCH',   'MERGE',
                'MKACTIVITY',  'MKCALENDAR', 'MKCOL',
                'MOVE',        'NOTIFY',     'OPTIONS',
                'PATCH',       'POST',       'PROPFIND',
                'PROPPATCH',   'PURGE',      'PUT',
                'REBIND',      'REPORT',     'SEARCH',
                'SOURCE',      'SUBSCRIBE',  'TRACE',
                'UNBIND',      'UNLINK',     'UNLOCK',
                'UNSUBSCRIBE'
              ],
              STATUS_CODES: {
                '100': 'Continue',
                '101': 'Switching Protocols',
                '102': 'Processing',
                '103': 'Early Hints',
                '200': 'OK',
                '201': 'Created',
                '202': 'Accepted',
                '203': 'Non-Authoritative Information',
                '204': 'No Content',
                '205': 'Reset Content',
                '206': 'Partial Content',
                '207': 'Multi-Status',
                '208': 'Already Reported',
                '226': 'IM Used',
                '300': 'Multiple Choices',
                '301': 'Moved Permanently',
                '302': 'Found',
                '303': 'See Other',
                '304': 'Not Modified',
                '305': 'Use Proxy',
                '307': 'Temporary Redirect',
                '308': 'Permanent Redirect',
                '400': 'Bad Request',
                '401': 'Unauthorized',
                '402': 'Payment Required',
                '403': 'Forbidden',
                '404': 'Not Found',
                '405': 'Method Not Allowed',
                '406': 'Not Acceptable',
                '407': 'Proxy Authentication Required',
                '408': 'Request Timeout',
                '409': 'Conflict',
                '410': 'Gone',
                '411': 'Length Required',
                '412': 'Precondition Failed',
                '413': 'Payload Too Large',
                '414': 'URI Too Long',
                '415': 'Unsupported Media Type',
                '416': 'Range Not Satisfiable',
                '417': 'Expectation Failed',
                '418': "I'm a Teapot",
                '421': 'Misdirected Request',
                '422': 'Unprocessable Entity',
                '423': 'Locked',
                '424': 'Failed Dependency',
                '425': 'Too Early',
                '426': 'Upgrade Required',
                '428': 'Precondition Required',
                '429': 'Too Many Requests',
                '431': 'Request Header Fields Too Large',
                '451': 'Unavailable For Legal Reasons',
                '500': 'Internal Server Error',
                '501': 'Not Implemented',
                '502': 'Bad Gateway',
                '503': 'Service Unavailable',
                '504': 'Gateway Timeout',
                '505': 'HTTP Version Not Supported',
                '506': 'Variant Also Negotiates',
                '507': 'Insufficient Storage',
                '508': 'Loop Detected',
                '509': 'Bandwidth Limit Exceeded',
                '510': 'Not Extended',
                '511': 'Network Authentication Required'
              },
              Agent: [Function: Agent] { defaultMaxSockets: Infinity },
              ClientRequest: [Function: ClientRequest],
              IncomingMessage: [Function: IncomingMessage],
              OutgoingMessage: [Function: OutgoingMessage],
              Server: [Function: Server],
              ServerResponse: [Function: ServerResponse],
              createServer: [Function: createServer],
              validateHeaderName: [Function: wrappedFn] {
                withoutStackTrace: [Function (anonymous)]
              },
              validateHeaderValue: [Function: wrappedFn] {
                withoutStackTrace: [Function (anonymous)]
              },
              get: [Function: get],
              request: [Function: request],
              setMaxIdleHTTPParsers: [Function: setMaxIdleHTTPParsers],
              maxHeaderSize: [Getter],
              globalAgent: [Getter/Setter]
            },
            'https:': {
              Agent: [Function: Agent],
              globalAgent: Agent {
                _events: [Object: null prototype] {
                  free: [Function (anonymous)],
                  newListener: [Function: maybeEnableKeylog]
                },
                _eventsCount: 2,
                _maxListeners: undefined,
                defaultPort: 443,
                protocol: 'https:',
                options: [Object: null prototype] {
                  keepAlive: true,
                  scheduling: 'lifo',
                  timeout: 5000,
                  noDelay: true,
                  path: null
                },
                requests: [Object: null prototype] {},
                sockets: [Object: null prototype] {},
                freeSockets: [Object: null prototype] {},
                keepAliveMsecs: 1000,
                keepAlive: true,
                maxSockets: Infinity,
                maxFreeSockets: 256,
                scheduling: 'lifo',
                maxTotalSockets: Infinity,
                totalSocketCount: 0,
                maxCachedSessions: 100,
                _sessionCache: { map: {}, list: [] },
                [Symbol(shapeMode)]: false,
                [Symbol(kCapture)]: false
              },
              Server: [Function: Server],
              createServer: [Function: createServer],
              get: [Function: get],
              request: [Function: request]
            }
          },
          pathname: '/get_conditions'
        },
        _ended: true,
        _ending: true,
        _redirectCount: 0,
        _redirects: [],
        _requestBodyLength: 13463,
        _requestBodyBuffers: [],
        _eventsCount: 3,
        _onNativeResponse: [Function (anonymous)],
        _currentRequest: [Circular *1],
        _currentUrl: 'http://127.0.0.1:5001/get_conditions',
        [Symbol(shapeMode)]: true,
        [Symbol(kCapture)]: false
      },
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(kBytesWritten)]: 0,
      [Symbol(kNeedDrain)]: false,
      [Symbol(corked)]: 0,
      [Symbol(kOutHeaders)]: [Object: null prototype] {
        accept: [ 'Accept', 'application/json, text/plain, */*' ],
        'content-type': [ 'Content-Type', 'application/json' ],
        'user-agent': [ 'User-Agent', 'axios/1.7.3' ],
        'content-length': [ 'Content-Length', '13463' ],
        'accept-encoding': [ 'Accept-Encoding', 'gzip, compress, deflate, br' ],
        host: [ 'Host', '127.0.0.1:5001' ]
      },
      [Symbol(errored)]: null,
      [Symbol(kHighWaterMark)]: 16384,
      [Symbol(kRejectNonStandardBodyWrites)]: false,
      [Symbol(kUniqueHeaders)]: null
    },
    data: '<!doctype html>\n' +
      '<html lang=en>\n' +
      '<title>500 Internal Server Error</title>\n' +
      '<h1>Internal Server Error</h1>\n' +
      '<p>The server encountered an internal error and was unable to complete your request. Either the server is overloaded or there is an error in the application.</p>\n'
  }
}